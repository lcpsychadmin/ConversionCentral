services:
  postgres:
    image: postgres:15
    container_name: conversioncentral-postgres
    restart: unless-stopped
    environment:
      POSTGRES_DB: conversion_central
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    ports:
      - "5432:5432"
    volumes:
      - postgres-data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  sqlserver:
    image: mcr.microsoft.com/mssql/server:2022-latest
    container_name: conversioncentral-sqlserver
    restart: unless-stopped
    environment:
      ACCEPT_EULA: "Y"
      MSSQL_PID: Developer
      SA_PASSWORD: ${SA_PASSWORD:-Str0ng!Passw0rd}
    ports:
      - "1433:1433"
    volumes:
      - sqlserver-data:/var/opt/mssql
    healthcheck:
      test:
        [
          "CMD-SHELL",
          "/opt/mssql-tools18/bin/sqlcmd -S localhost -U sa -P ${SA_PASSWORD:-Str0ng!Passw0rd} -C -Q 'SELECT 1'"
        ]
      interval: 10s
      timeout: 5s
      retries: 10

  sqlserver-seed:
    image: mcr.microsoft.com/mssql-tools:latest
    depends_on:
      sqlserver:
        condition: service_healthy
    environment:
      SA_PASSWORD: ${SA_PASSWORD:-Str0ng!Passw0rd}
    volumes:
      - ./docker/sqlserver-init.sql:/init.sql:ro
    entrypoint: []
    command:
      - /bin/bash
      - -c
      - |
          set -e
          sleep 10
          /opt/mssql-tools/bin/sqlcmd -S sqlserver -U sa -P ${SA_PASSWORD:-Str0ng!Passw0rd} -i /init.sql
    restart: "no"

  backend:
    build:
      context: .
      dockerfile: Dockerfile.backend
      args:
        INGESTION_SQL_PASSWORD_RAW: ${INGESTION_SQL_PASSWORD:-Ch@ngeMe123!}
    container_name: conversioncentral-backend
    restart: unless-stopped
    environment:
      APP_NAME: "Conversion Central API"
      DATABASE_URL: "postgresql+psycopg://postgres:postgres@postgres:5432/conversion_central"
      INGESTION_DATABASE_URL: "mssql+pyodbc://ingestion_user:Ch%40ngeMe123%21@sqlserver:1433/ConversionIngestion?driver=ODBC+Driver+18+for+SQL+Server&TrustServerCertificate=yes"
      FRONTEND_ORIGINS: "http://localhost:5173,http://127.0.0.1:5173,http://localhost:3000,http://127.0.0.1:3000,https://wescollins.duckdns.org,http://wescollins.duckdns.org"
    depends_on:
      postgres:
        condition: service_healthy
      sqlserver:
        condition: service_healthy
      sqlserver-seed:
        condition: service_completed_successfully
    ports:
      - "8000:8000"

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: conversioncentral-frontend
    restart: unless-stopped
    ports:
      - "3000:80"
    depends_on:
      - backend

volumes:
  postgres-data:
  sqlserver-data:
